rd_("BeA unique identifier for the playlist.AaThe maximum time.AaThe minimum time.AmA unique resource identifier.CeReturns the time as an absolute (non-negative) value.CmReturns the value corresponding to the key and convert it \xe2\x80\xa6CeReturns a reference to the underlying implementation.0DiCreates a new <code>LocalServer</code> with the given bus name suffix \xe2\x80\xa6DhCreates a new <code>Server</code> with the given bus name suffix and \xe2\x80\xa6BgCreates an empty <code>Metadata</code>.CkReturns a task that run the server until the server and \xe2\x80\xa6ClReturns a task that runs the player\xe2\x80\x99s server until the \xe2\x80\xa6ChReplaces the value for the given key and returns the \xe2\x80\xa6AoThe location of the media file.BdSets the location of the media file.CkThe playback will stop when there are no more tracks to \xe2\x80\xa6ChA time with microsecond precision which can be negative.oA time of zero.AgEmits the given signal.0AoReturns the argument unchanged.000000000000000000AnThe URI of an (optional) icon.BaCalls <code>U::from(self)</code>.000000000000000000CfThe name of the playlist, typically given by the user.BiSkips to the next track in the tracklist.0AkStarts or resumes playback.0BhCauses the media player to stop running.0AjThe current playback rate.0CnSeeks forward in the current track by the specified offset \xe2\x80\xa60oStops playback.0CnThe current track will start again from the beginning once \xe2\x80\xa6oThe album name.AdSets the album name.BoCreates <code>Metadata</code> from the builder.AjThe genre(s) of the track.AoSets the genre(s) of the track.AnSkip to the specified TrackId.0AoSets a value for the given key.A`Pauses playback.0CkBrings the media player\xe2\x80\x99s user interface to the front \xe2\x80\xa60A`The track title.AeSets the track title.AlA track is currently paused.DeReady-to-use mutable <em>service</em>-side object that internally \xe2\x80\xa6CjIndicates that the track position has changed in a way \xe2\x80\xa6EfThin wrapper around <code>zbus::Connection</code> that calls to <code>T</code>\xe2\x80\x99s \xe2\x80\xa6CnUsed for emitting signals on <code>Server::emit</code> and \xe2\x80\xa6AcAudio volume level.AdThe track artist(s).AiSets the track artist(s).CfReturns the string representation of this loop status.CjReturns the string representation of this playback status.CfReturns the string representation of this playlist \xe2\x80\xa6AjThe duration of the track.AoSets the duration of the track.AaThe track lyrics.AfSets the track lyrics.CkAn array which contains the identifier of each track in \xe2\x80\xa60BaThe new content of the tracklist.AaThe volume level.0AmA track is currently playing.BdThere is no track currently playing.AhUnique track identifier.CiThe location of an image representing the track or album.CkSets the location of an image representing the track or \xe2\x80\xa6EaReturns the number of <em>whole</em> seconds contained by this <code>Time</code>.CiThis contains the definitions of builder-pattern structs.CnCreates a new builder-pattern struct instance to construct \xe2\x80\xa6B`A (list of) freeform comment(s).BeSets a (list of) freeform comment(s).BoReturns true if this <code>Time</code> is zero.BdSets the location of the media file.AmWhether playback is shuffled.0CmA unique identity for this track within the context of an \xe2\x80\xa6ClSets a unique identity for this track within the context \xe2\x80\xa6AgCombined date and time.CbA mapping from metadata attribute names to values.BnA special track ID to indicate \xe2\x80\x9cno track\xe2\x80\x9d.BgA data structure describing a playlist.BlThe playback loops through a list of tracks.CoUsed for emitting <code>PropertiesChanged</code> signals on \xe2\x80\xa6DfReturns the number of <em>whole</em> nanoseconds contained by this \xe2\x80\xa6BcReturns the bus name of the server.0EbWhether playback can be started using <code>Play</code> or <code>PlayPause</code>.0BhWhether the player may be asked to quit.0CnWhether the client can control the playback position using \xe2\x80\xa60AmThe composer(s) of the track.BbSets the composer(s) of the track.CnA friendly name to identify the media player to users (eg: \xe2\x80\xa60AmThe lyricist(s) of the track.BbSets the lyricist(s) of the track.BdThe metadata of the current element.0BeThe metadata of the newly added item.AgThe new track metadata.BoOpens the <code>uri</code> given as an argument0BhThe playlist which details have changed.DkThe current track position, between 0 and the <code>mpris:length</code> \xe2\x80\xa60AaThe new position.BmSkips to the previous track in the tracklist.0AoSets the current playback rate.0BjThe identifier of the track being removed.BoThe id of the track which metadata has changed.AlAdds a URI in the tracklist.0DgReturns the number of <em>whole</em> microseconds contained by this \xe2\x80\xa6DgReturns the number of <em>whole</em> milliseconds contained by this \xe2\x80\xa6BlThe speed of the music, in beats per minute.CaSets the speed of the music, in beats per minute.EbWhether playback can be paused using <code>Pause</code> or <code>PlayPause</code>.0CcWhether the media player may be asked to be raised.0DfCreates a new <code>Time</code> from the specified number of whole \xe2\x80\xa6CjReturns a reference to the value corresponding to the key.AoWhen the track was last played.BdSets when the track was last played.CfThe available orderings. At least one must be offered.0AdSets the album name.AoSets the genre(s) of the track.AeSets the track title.ChReplaces the value for the given key and returns the \xe2\x80\xa6BnThe number of times the track has been played.CcSets the number of times the track has been played.AgA repeat / loop status.AkUnique playlist identifier.ChIndicates that a track has been added to the track list.CoReturns a reference to the inner <code>zbus::Connection</code>.CiReturns a reference to the inner <code>Connection</code>.B`When the track was first played.BeSets when the track was first played.DfCreates a new <code>Time</code> from the specified number of whole \xe2\x80\xa6CeWhether the media player is occupying the fullscreen.0CcReturns the track ID as an <code>ObjectPath</code>.A`Pauses playback.0AiSets the track artist(s).AoSets the duration of the track.AfSets the track lyrics.AfSets the volume level.0FeLocal version of <code>Server</code> that doesn\xe2\x80\x99t require <code>T</code> to be <code>Send</code>\xe2\x80\xa6AhA user-defined ordering.CmThe identifier of the track after which the new track was \xe2\x80\xa6CnAn automatically-generated rating, based on things such as \xe2\x80\xa6CkSets an automatically-generated rating, based on things \xe2\x80\xa6ChWhether the media player may be controlled over this \xe2\x80\xa60BbThis can only be set on construct.DdWhether the client can call the <code>Next</code> method on this \xe2\x80\xa60EeChecked <code>Time</code> addition. Computes <code>self + other</code>, returning \xe2\x80\xa6EhChecked <code>Time</code> subtraction. Computes <code>self - other</code>, returning \xe2\x80\xa6CeThe disc number on the album that this track is from.CjSets the disc number on the album that this track is from.DfCreates a new <code>Time</code> from the specified number of whole \xe2\x80\xa60CcReturns true if this <code>Time</code> is negative.CcReturns true if this <code>Time</code> is positive.B`The current loop / repeat status0CkSets the location of an image representing the track or \xe2\x80\xa6BeSets a (list of) freeform comment(s).BbSets whether playback is shuffled.0ClSets a unique identity for this track within the context \xe2\x80\xa6ClA user-specified rating. This should be in the range 0.0 \xe2\x80\xa6CmSets a user-specified rating. This should be in the range \xe2\x80\xa6BiAlphabetical ordering by name, ascending.BhOrdering by creation date, oldest first.C`Ordering by date of last playback, oldest first.BmOrdering by last modified date, oldest first.A`A playback rate.CjIndicates that a track has been removed from the track \xe2\x80\xa6AdThe album artist(s).AiSets the album artist(s).DdThe maximum value which the <code>Rate</code> property can take. \xe2\x80\xa60DdThe minimum value which the <code>Rate</code> property can take. \xe2\x80\xa60lMPRIS ServerDiCreates a new <code>LocalServer</code> with the given bus name suffix \xe2\x80\xa6DhCreates a new <code>Server</code> with the given bus name suffix and \xe2\x80\xa6BcRemoves an item from the tracklist.0BbSets the composer(s) of the track.BbSets the lyricist(s) of the track.B`Sets the current track position.0CiThis does not emit <code>PropertiesChanged</code> signal.BcThe track number on the album disc.BhSets the track number on the album disc.BmA builder used to create <code>Player</code>.CcUsed to implement org.mpris.MediaPlayer2 interface.ChThe identifier of the track to be considered as current.CmThe basename of an installed .desktop file which complies \xe2\x80\xa60AhGets a set of playlists.0CaSets the speed of the music, in beats per minute.BdSets when the track was last played.CcSets the number of times the track has been played.AaA playback state.DeIndicates whether the <code>/org/mpris/MediaPlayer2</code> object \xe2\x80\xa60BbThe number of playlists available.0CoEmits the given signal on the <code>Playlists</code> interface.0EhSaturating <code>Time</code> addition. Computes <code>self + other</code>, returning \xe2\x80\xa6EaSaturating <code>Time</code> subtraction. Computes <code>self - other</code>, \xe2\x80\xa6BeSets when the track was first played.CjSets whether the media player is occupying the fullscreen.0BoA builder used to create <code>Metadata</code>.CnUsed to implement org.mpris.MediaPlayer2.Player interface, \xe2\x80\xa6CiIndicates that either the Name or Icon attribute of a \xe2\x80\xa6DhUsed for emitting signals on <code>Server::playlists_emit</code> and \xe2\x80\xa6DiUsed for emitting signals on <code>Server::track_list_emit</code> and \xe2\x80\xa6AnThe currently-active playlist.0CgWhether tracks can be added to and removed from the \xe2\x80\xa60DhWhether the client can call the <code>Previous</code> method on this \xe2\x80\xa60CkWhen the track was created. Usually only the year componentCjSets when the track was created. Usually only the year \xe2\x80\xa6AlThe current playback status.0CkSets an automatically-generated rating, based on things \xe2\x80\xa6CjSets the disc number on the album that this track is from.BeSets the current loop / repeat status0CmSets a user-specified rating. This should be in the range \xe2\x80\xa6CoEmits the given signal on the <code>TrackList</code> interface.0BmSpecifies the ordering of returned playlists.BdReleases the bus name of the server.0AiSets the album artist(s).BhSets the track number on the album disc.CoUsed for emitting <code>PropertiesChanged</code> signals on \xe2\x80\xa60CfIndicates that the entire tracklist has been replaced.BbStarts playing the given playlist.0EeLocal version of <code>RootInterface</code> to be used with <code>LocalServer</code>.DiA task that runs <code>LocalServer</code>\xe2\x80\x99s event handler until the \xe2\x80\xa6CfUsed to implement org.mpris.MediaPlayer2.Playlists \xe2\x80\xa6CfUsed to implement org.mpris.MediaPlayer2.TrackList \xe2\x80\xa6CeWhether the player may be asked to enter or leave \xe2\x80\xa60DiCreates a new <code>LocalServer</code> with the given bus name suffix \xe2\x80\xa6DhCreates a new <code>Server</code> with the given bus name suffix and \xe2\x80\xa6DaEmits the <code>PropertiesChanged</code> signal for the given \xe2\x80\xa60CdGets all the metadata available for a set of tracks.032CjSets when the track was created. Usually only the year \xe2\x80\xa6DaLocal version of <code>PlayerInterface</code> to be used with \xe2\x80\xa6CkIndicates that the metadata of a track in the tracklist \xe2\x80\xa6BmThe mime-types supported by the media player.0BnThe URI schemes supported by the media player.0DdLocal version of <code>PlaylistsInterface</code> to be used with \xe2\x80\xa6DdLocal version of <code>TrackListInterface</code> to be used with \xe2\x80\xa68888")